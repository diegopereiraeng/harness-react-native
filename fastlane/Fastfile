# Fastfile

default_platform(:ios)

platform :ios do

    # Before running a lane, make sure to install the app dependencies
    before_all do
        # install_pods
        # ensure_git_status_clean
    end

    lane :create_keys do
        match(type: "development", force_for_new_devices: true, git_basic_authorization: ENV["GIT_BASIC_AUTHORIZATION"])
        match(type: "adhoc", force_for_new_devices: true)
        match(type: "appstore")
    end

    desc "Download keys"
    lane :download_keys do
        match(type: "development", readonly: true, keychain_password: ENV["KEYCHAIN_PASSWORD"],app_identifier: "com.devopsmobile.HarnessReact",)
        match(type: "adhoc", readonly: true, keychain_password: ENV["KEYCHAIN_PASSWORD"],app_identifier: "com.devopsmobile.HarnessReact",)
        match(type: "appstore", readonly: true, keychain_password: ENV["KEYCHAIN_PASSWORD"],app_identifier: "com.devopsmobile.HarnessReact",)
    end

    desc 'Build the iOS application.'
    private_lane :build do
        download_keys
        increment_build_number(build_number: number_of_commits)
        gym(
        scheme: 'HarnessReact',
        workspace: ENV["WORKSPACE"],
        clean: true,
        export_method: 'app-store',
        export_team_id: ENV["TEAM_ID"],
        output_name: "HarnessReact.ipa"
        )
    end

    desc "Build the iOS app and send to Test Flight"
    lane :beta do
        build
        commit_version_bump(
        message: 'Increment build number to [ci skip]',
        xcodeproj: '.ios/HarnessReact.xcodeproj'
        )
        push_to_git_remote
        api_key = app_store_connect_api_key(
        key_id: ENV["APPLE_API_KEY_ID"],
        issuer_id: ENV["APPLE_API_ISSUER_ID"],
        key_content: ENV["APPLE_API_KEY_CONTENT"]
        )
        upload_to_testflight(
        api_key: api_key,
        skip_waiting_for_build_processing: true
        )
    end

    desc "Deploy a new version to the App Store"
    lane :release do
        increment_version_number(
        version_number: next_version_number,
        xcodeproj: '.ios/HarnessReact.xcodeproj'
        )
        build
        upload_to_app_store(
        skip_metadata: true,
        skip_screenshots: true,
        force: true,
        api_key: api_key
        )
    end

    after_all do |lane|
        clean_build_artifacts
    end

    error do |lane, exception|
        slack(
        message: "Fastlane failed on lane #{lane} with error: #{exception}",
        slack_url: ENV["SLACK_WEBHOOK_URL"]
        )
    end

end
