## Resolve react_native_pods.rb with node to allow for hoisting
#require Pod::Executable.execute_command('node', ['-p',
#  'require.resolve(
#    "react-native/scripts/react_native_pods.rb",
#    {paths: [process.argv[1]]},
#  )', __dir__]).strip

#platform :ios, '13.4'
## prepare_react_native_project!
## Prepare React Native project (if this method is defined in react_native_pods.rb)
#prepare_react_native_project! if defined?(prepare_react_native_project!)
#
#
## If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.
## because `react-native-flipper` depends on (FlipperKit,...) that will be excluded
##
## To fix this you can also exclude `react-native-flipper` using a `react-native.config.js`
## ```js
## module.exports = {
##   dependencies: {
##     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),
## ```
#flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled
#
## Define Flipper versions
#flipper_version = '0.125.0' # Adjust this to the version you want to use
#flipper_folly_version = '2.6.10' # Adjust according to the Flipper version compatibility
#
## Use Flipper
#use_flipper!(
#  'Flipper' => flipper_version,
#  'Flipper-Folly' => flipper_folly_version,
#  'Flipper-RSocket' => flipper_version,
#  # Add other Flipper dependencies here if necessary, according to your Flipper version requirements
#)
#
#linkage = ENV['USE_FRAMEWORKS']
#if linkage != nil
#  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
#  use_frameworks! :linkage => linkage.to_sym
#end
#
#target 'HarnessReact' do
#  config = use_native_modules!
#
#
#  use_react_native!(
#    :path => config[:reactNativePath],
#    # Enables Flipper.
#    #
#    # Note that if you have use_frameworks! enabled, Flipper will not work and
#    # you should disable the next line.
#    :flipper_configuration => flipper_config,
#    # An absolute path to your application root.
#    :app_path => "#{Pod::Config.instance.installation_root}/.."
#  )
#
#  target 'HarnessReactTests' do
#    inherit! :complete
#    # Pods for testing
#  end
#
#  post_install do |installer|
#    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
#    react_native_post_install(
#      installer,
#      config[:reactNativePath],
#      :mac_catalyst_enabled => false
#    )
#    fix_library_search_paths(installer)
#    installer.pods_project.targets.each do |target|
#      target.build_configurations.each do |config|
#        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.4'
#        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = "arm64"
#      end
#    end
#  end
#  
#end
#
#def fix_library_search_paths(installer)
#  def fix_config(config)
#    lib_search_paths = config.build_settings["LIBRARY_SEARCH_PATHS"]
#    if lib_search_paths
#      if lib_search_paths.include?("$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)") || lib_search_paths.include?("\"$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)\"")
#        # $(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME) causes problem with Xcode 12.5 + arm64 (Apple M1)
#        # since the libraries there are only built for x86_64 and i386.
#        lib_search_paths.delete("$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)")
#        lib_search_paths.delete("\"$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)\"")
#        if !(lib_search_paths.include?("$(SDKROOT)/usr/lib/swift") || lib_search_paths.include?("\"$(SDKROOT)/usr/lib/swift\""))
#          # however, $(SDKROOT)/usr/lib/swift is required, at least if user is not running CocoaPods 1.11
#          lib_search_paths.insert(0, "$(SDKROOT)/usr/lib/swift")
#        end
#      end
#    end
#  end
#
#  projects = installer.aggregate_targets
#    .map{ |t| t.user_project }
#    .uniq{ |p| p.path }
#    .push(installer.pods_project)
#
#  projects.each do |project|
#    project.build_configurations.each do |config|
#      fix_config(config)
#    end
#    project.native_targets.each do |target|
#      target.build_configurations.each do |config|
#        fix_config(config)
#      end
#    end
#    project.save()
#  end
#end 


# Import the react_native_pods script with hoisting support
require_relative '../node_modules/react-native/scripts/react_native_pods'

platform :ios, '13.4'

require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

target 'HarnessReact' do
  # Your 'node_modules' directory is probably in the root of your project,
  # but if not, adjust the `:path` accordingly
  pod 'FBLazyVector', :path => "../node_modules/react-native/Libraries/FBLazyVector"
  # pod 'FBReactNativeSpec', :path => "../node_modules/react-native/Libraries/FBReactNativeSpec"
  pod 'RCTRequired', :path => "../node_modules/react-native/Libraries/RCTRequired"
  pod 'RCTTypeSafety', :path => "../node_modules/react-native/Libraries/TypeSafety"
  pod 'React', :path => '../node_modules/react-native/'
  pod 'React-Core', :path => '../node_modules/react-native/'
  pod 'React-CoreModules', :path => '../node_modules/react-native/React/CoreModules'
  pod 'React-Core/DevSupport', :path => '../node_modules/react-native/'
  pod 'React-RCTActionSheet', :path => '../node_modules/react-native/Libraries/ActionSheetIOS'
  pod 'React-RCTAnimation', :path => '../node_modules/react-native/Libraries/NativeAnimation'
  pod 'React-RCTBlob', :path => '../node_modules/react-native/Libraries/Blob'
  pod 'React-RCTImage', :path => '../node_modules/react-native/Libraries/Image'
  pod 'React-RCTLinking', :path => '../node_modules/react-native/Libraries/LinkingIOS'
  pod 'React-RCTNetwork', :path => '../node_modules/react-native/Libraries/Network'
  pod 'React-RCTSettings', :path => '../node_modules/react-native/Libraries/Settings'
  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text'
  pod 'React-RCTVibration', :path => '../node_modules/react-native/Libraries/Vibration'
  pod 'React-Core/RCTWebSocket', :path => '../node_modules/react-native/'

  pod 'React-cxxreact', :path => '../node_modules/react-native/ReactCommon/cxxreact'
  pod 'React-jsi', :path => '../node_modules/react-native/ReactCommon/jsi'
  pod 'React-jsiexecutor', :path => '../node_modules/react-native/ReactCommon/jsiexecutor'
  pod 'React-jsinspector', :path => '../node_modules/react-native/ReactCommon/jsinspector'
  pod 'ReactCommon/callinvoker', :path => "../node_modules/react-native/ReactCommon"
  pod 'ReactCommon/turbomodule/core', :path => "../node_modules/react-native/ReactCommon"
  pod 'Yoga', :path => '../node_modules/react-native/ReactCommon/yoga'

  pod 'DoubleConversion', :podspec => '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
  pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec'
  pod 'Folly', :podspec => '../node_modules/react-native/third-party-podspecs/Folly.podspec'

  # Auto-linking for React Native modules and dependencies
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # Update Flipper to the available version
    :flipper_configuration => FlipperConfiguration.enabled(["Debug"], { 'Flipper' => '0.233.0' }),
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # Pods for HarnessReact
  # (List of your pods for the target goes here)

  post_install do |installer|
    react_native_post_install(installer)
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end
end

# Post-install scripts to adjust settings for Xcode 12.5 and M1 Macs compatibility
def __apply_Xcode_12_5_M1_post_install_workaround(installer)
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.4'
      config.build_settings.delete 'IPHONEOS_DEPLOYMENT_TARGET[sdk=watchos*]'
      config.build_settings.delete 'IPHONEOS_DEPLOYMENT_TARGET[sdk=appletvos*]'
    end
  end
end
